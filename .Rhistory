TRUE ~ 'outro'))%>%
mutate(os=as.character(os))%>%
mutate(os=case_when(os %in% as.character(osmaiorque100$os) ~ as.character(os),
TRUE ~ 'outro'))%>%
mutate(os=as.factor(os))%>%
mutate(device=as.factor(device))
dummy<- dummyVars( ~ app, data=dadosaj)
dadosaj<-cbind(dadosaj,predict(dummy,dadosaj))
x<-createDataPartition(dadosaj$is_attributed,1,p=0.7,list=FALSE)
train<-dadosaj[x,]
test<-dadosaj[-x,]
dados<-read_csv(trainname,col_names=TRUE,col_types=NULL)%>%
mutate(app=factor(app))%>%
mutate(device=factor(device))%>%
mutate(is_attributed=factor(is_attributed))%>%
mutate(os=factor(os))%>%
mutate(channel=as.factor(channel))%>%
select(-attributed_time)%>%
mutate(ip=as.factor(ip))
# teste<-read_csv(testname,col_names=TRUE,col_types=NULL)%>%
#   mutate(app=factor(app))%>%
#   mutate(device=factor(device))%>%
#   mutate(os=factor(os))%>%
#   sample(100000)
#Estatísticas Descritivas dos Dados-------------
skim(dados)
glimpse(dados)
summary(dados)
table(dados$app,dados$is_attributed)
table(dados$device,dados$is_attributed)
table(dados$os,dados$is_attributed)
table(dados$channel,dados$is_attributed)
#visualização das ocorrências das variáveis em cada grupo
dados%>%group_by(device,is_attributed)%>%
count()%>%View()
# os devices 0, 1 e 2 são os mais frequentes, dominando o grupo
dados%>%group_by(app,is_attributed)%>%
count()%>%View()
#vale deixar de fora apenas os apps que possuem observações positivas e negativas, ou One hot encode todos
dados%>%group_by(os,is_attributed)%>%
count()%>%View()
#agrupados todos com ocorrência menor que 100
osmaiorque100<-dados%>%group_by(os,is_attributed)%>%
count()%>%
filter(n>100)
ggplot(dados)+
geom_bar(aes(x=app))+
facet_wrap(is_attributed~.)+
coord_flip()
ggplot(dados)+
geom_bar(aes(x=device))+
facet_wrap(is_attributed~.)+
coord_flip()
ggplot(dados)+
geom_bar(aes(x=os))+
facet_wrap(is_attributed~.)+
coord_flip()
ggplot(dados)+
geom_bar(aes(x=channel))+
facet_wrap(is_attributed~.)+
coord_flip()
ggplot(dados)+
geom_histogram(aes(x=click_time))+
facet_wrap(is_attributed~.)+
coord_flip()
ggplot(dados)+
geom_boxplot(aes(x=is_attributed,y=click_time))
#Foi possível observar que as variáveis categóricas possuem multiplos níveis.
#A variavel de resposta é altamente desbalanceada.
#Tratamento das variáveis selecionadas para dados e teste--------
dadosaj<-dados%>%
mutate(device=case_when(device == 0~'0',
device == 1~'1',
device == 2~'2',
TRUE ~ 'outro'))%>%
mutate(os=as.character(os))%>%
mutate(os=case_when(os %in% as.character(osmaiorque100$os) ~ as.character(os),
TRUE ~ 'outro'))%>%
mutate(os=as.factor(os))%>%
mutate(device=as.factor(device))
dummy<- dummyVars( ~ app, data=dadosaj)
dadosaj<-cbind(dadosaj,predict(dummy,dadosaj))
x<-createDataPartition(dadosaj$is_attributed,1,p=0.7,list=FALSE)
train<-dadosaj[x,]
test<-dadosaj[-x,]
dados<-read_csv(trainname,col_names=TRUE,col_types=NULL)%>%
mutate(app=factor(app))%>%
mutate(device=factor(device))%>%
mutate(is_attributed=factor(is_attributed))%>%
mutate(os=factor(os))%>%
mutate(channel=as.factor(channel))%>%
select(-attributed_time)%>%
mutate(ip=as.factor(ip))
setwd("~/GitHub/Fraude")
dados<-read_csv(trainname,col_names=TRUE,col_types=NULL)%>%
mutate(app=factor(app))%>%
mutate(device=factor(device))%>%
mutate(is_attributed=factor(is_attributed))%>%
mutate(os=factor(os))%>%
mutate(channel=as.factor(channel))%>%
select(-attributed_time)%>%
mutate(ip=as.factor(ip))
skim(dados)
glimpse(dados)
summary(dados)
table(dados$app,dados$is_attributed)
table(dados$device,dados$is_attributed)
table(dados$os,dados$is_attributed)
table(dados$channel,dados$is_attributed)
#visualização das ocorrências das variáveis em cada grupo
dados%>%group_by(device,is_attributed)%>%
count()%>%View()
# os devices 0, 1 e 2 são os mais frequentes, dominando o grupo
dados%>%group_by(app,is_attributed)%>%
count()%>%View()
#vale deixar de fora apenas os apps que possuem observações positivas e negativas, ou One hot encode todos
dados%>%group_by(os,is_attributed)%>%
count()%>%View()
#agrupados todos com ocorrência menor que 100
osmaiorque100<-dados%>%group_by(os,is_attributed)%>%
count()%>%
filter(n>100)
ggplot(dados)+
geom_bar(aes(x=app))+
facet_wrap(is_attributed~.)+
coord_flip()
ggplot(dados)+
geom_bar(aes(x=device))+
facet_wrap(is_attributed~.)+
coord_flip()
ggplot(dados)+
geom_bar(aes(x=os))+
facet_wrap(is_attributed~.)+
coord_flip()
ggplot(dados)+
geom_bar(aes(x=channel))+
facet_wrap(is_attributed~.)+
coord_flip()
ggplot(dados)+
geom_histogram(aes(x=click_time))+
facet_wrap(is_attributed~.)+
coord_flip()
ggplot(dados)+
geom_boxplot(aes(x=is_attributed,y=click_time))
#Foi possível observar que as variáveis categóricas possuem multiplos níveis.
#A variavel de resposta é altamente desbalanceada.
#Tratamento das variáveis selecionadas para dados e teste--------
dadosaj<-dados%>%
mutate(device=case_when(device == 0~'0',
device == 1~'1',
device == 2~'2',
TRUE ~ 'outro'))%>%
mutate(os=as.character(os))%>%
mutate(os=case_when(os %in% as.character(osmaiorque100$os) ~ as.character(os),
TRUE ~ 'outro'))%>%
mutate(os=as.factor(os))%>%
mutate(device=as.factor(device))
dummy<- dummyVars( ~ app, data=dadosaj)
dadosaj<-cbind(dadosaj,predict(dummy,dadosaj))
x<-createDataPartition(dadosaj$is_attributed,1,p=0.7,list=FALSE)
train<-dadosaj[x,]
test<-dadosaj[-x,]
rfectrl <- rfeControl(functions = lmFuncs,verbose=TRUE)
feature<-rfe(is_attributed ~ . -app -ip,
data=train,
sizes=2:10,
rfeControl=rfectrl)
warnings()
rfectrl <- rfeControl(functions = rfFuncs,verbose=TRUE,repeats=2)
feature<-rfe(is_attributed ~ . -app -ip,
data=train,
sizes=2:10,
rfeControl=rfectrl)
rfectrl <- rfeControl(functions = rfFuncs,method='cv',verbose=TRUE,repeats=2)
feature<-rfe(is_attributed ~ . -app -ip,
data=train,
sizes=c(4,6,8),
rfeControl=rfectrl)
sbfctrl <- sbfControl(functions = 'nbSBF',verbose=TRUE)
feature<-sbf(is_attributed ~ . -app -ip,
data=train,
sizes=c(4,6,8),
sbfControl=sbfctrl)
feature<-sbf(is_attributed ~ . -app -ip,
data=train,
sbfControl=sbfctrl)
browse()
feature<-sbf(is_attributed ~ . -app -ip,
data=train,
sbfControl=sbfctrl)
feature<-sbf(is_attributed ~ . -app -ip,
feature<-sbf(is_attributed ~ . -app -ip,
data=train
# sbfControl=sbfctrl)
)
feature<-sbf(is_attributed ~ . -app -ip,
data=train)
feature<-sbf(is_attributed ~ . -app -ip,
data=train)
sbfctrl <- sbfControl(functions = 'rfSBF',verbose=TRUE)
browse()
feature<-sbf(is_attributed ~ . -app -ip,
data=train,
sbfControl=sbfctrl)
feature<-sbf(is_attributed ~ . -app -ip,
data=as.data.frame(train),
sbfControl=sbfctrl)
dados<-dados%>%select(-app,-ip)%>%glimpse()
train<-train%>%select(-app,-ip)%>%glimpse()
vars(is.double)
train<-train%>%select(-app,-ip)%>%
)
train<-train%>%select(-app,-ip)%>%
mutate(vars(is.double)=as.factor(vars(is.double)))
dummy
predict(dummy,dadosaj)
predict(dummy,dadosaj)%>%glimpse()
dadosaj<-cbind(dadosaj,as.factor(predict(dummy,dadosaj)))
glimpse(dadosaj)
dadosaj<-cbind(dadosaj,predict(dummy,dadosaj))
dados<-read_csv(trainname,col_names=TRUE,col_types=NULL)%>%
mutate(app=factor(app))%>%
mutate(device=factor(device))%>%
mutate(is_attributed=factor(is_attributed))%>%
mutate(os=factor(os))%>%
mutate(channel=as.factor(channel))%>%
select(-attributed_time)%>%
mutate(ip=as.factor(ip))
trainname<-'train_sample.csv'
dados<-read_csv(trainname,col_names=TRUE,col_types=NULL)%>%
mutate(app=factor(app))%>%
mutate(device=factor(device))%>%
mutate(is_attributed=factor(is_attributed))%>%
mutate(os=factor(os))%>%
mutate(channel=as.factor(channel))%>%
select(-attributed_time)%>%
mutate(ip=as.factor(ip))
dados<-read_csv(trainname,col_names=TRUE,col_types=NULL)%>%
mutate(app=factor(app))%>%
mutate(device=factor(device))%>%
mutate(app=factor(app))%>%
mutate(is_attributed=factor(is_attributed))%>%
mutate(os=factor(os))%>%
mutate(channel=factor(channel))%>%
select(-attributed_time)%>%
mutate(ip=factor(ip))
View(dados)
dados
skim(dados)
osmaiorque100<-dados%>%group_by(os,is_attributed)%>%
count()%>%
filter(n>100)
dadosaj<-dados%>%
mutate(device=case_when(device == 0~'0',
device == 1~'1',
device == 2~'2',
TRUE ~ 'outro'))%>%
mutate(os=as.character(os))%>%
mutate(os=case_when(os %in% as.character(osmaiorque100$os) ~ as.character(os),
TRUE ~ 'outro'))%>%
mutate(os=as.factor(os))%>%
mutate(device=as.factor(device))
dadosaj
dummy<- dummyVars( ~ app, data=dadosaj)
dadosaj<-cbind(dadosaj,predict(dummy,dadosaj))
dadosaj<-cbind(dadosaj,predict(dummy,dadosaj))
glimpse(dadosaj)
dadosaj<-dados%>%
mutate(device=case_when(device == 0~'0',
device == 1~'1',
device == 2~'2',
TRUE ~ 'outro'))%>%
mutate(os=as.character(os))%>%
mutate(os=case_when(os %in% as.character(osmaiorque100$os) ~ as.character(os),
TRUE ~ 'outro'))%>%
mutate(os=as.factor(os))%>%
mutate(device=as.factor(device))
dummy<- dummyVars( ~ app, data=dadosaj,newdata=dummy2)
dummy<- dummyVars( ~ app, data=dadosaj,newdata=dummy2,n=2)
dadosaj<-cbind(dadosaj,predict(dummy,dadosaj))
glimpse(dadosaj)
colnames(dadosaj)
colnames(dadosaj)%>%grepl('app.')
colnames(dadosaj)%>%grep('app.')
colnames(dadosaj)%>%grep('app.',value=TRUE)
colnames(dadosaj)%>%grep('app.',.,value=TRUE)
dadosaj<-sapply(dadosaj[,k],factor)
k<-colnames(dadosaj)%>%grep('app.',.,value=TRUE)
dadosaj<-sapply(dadosaj[,k],factor)
View(dadosaj)
glimpse(dadosaj)
dadosaj<-dados%>%
mutate(device=case_when(device == 0~'0',
device == 1~'1',
device == 2~'2',
TRUE ~ 'outro'))%>%
mutate(os=as.character(os))%>%
mutate(os=case_when(os %in% as.character(osmaiorque100$os) ~ as.character(os),
TRUE ~ 'outro'))%>%
mutate(os=as.factor(os))%>%
mutate(device=as.factor(device))
dummy<- dummyVars( ~ app, data=dadosaj,newdata=dummy2,n=2)
dadosaj<-cbind(dadosaj,predict(dummy,dadosaj))
k<-colnames(dadosaj)%>%grep('app.',.,value=TRUE)
dadosaj<-lapply(dadosaj[,k],factor)
glimpse(dadosaj)
dadosaj<-lapply(dadosaj[k],factor)
glimpse(dadosaj)
dadosaj[k]<-lapply(dadosaj[k],factor)
dadosaj<-dados%>%
mutate(device=case_when(device == 0~'0',
device == 1~'1',
device == 2~'2',
TRUE ~ 'outro'))%>%
mutate(os=as.character(os))%>%
mutate(os=case_when(os %in% as.character(osmaiorque100$os) ~ as.character(os),
TRUE ~ 'outro'))%>%
mutate(os=as.factor(os))%>%
mutate(device=as.factor(device))
dummy<- dummyVars( ~ app, data=dadosaj,newdata=dummy2,n=2)
dadosaj<-cbind(dadosaj,predict(dummy,dadosaj))
k<-colnames(dadosaj)%>%grep('app.',.,value=TRUE)
dadosaj[k]<-lapply(dadosaj[k],factor)
glimpse(dadosaj)
x<-createDataPartition(dadosaj$is_attributed,1,p=0.7,list=FALSE)
train<-dadosaj[x,]
test<-dadosaj[-x,]
train<-train%>%select(-app,-ip)
sbfctrl <- sbfControl(functions = 'rfSBF',verbose=TRUE)
feature<-sbf(is_attributed ~ . -app -ip,
data=train,
sbfControl=sbfctrl)
feature<-sbf(is_attributed ~ . ,
data=train,
sbfControl=sbfctrl)
rfectrl <- refControl(functions = 'rfFuncs',verbose=TRUE)
rfectrl <- rfeControl(functions = 'rfFuncs',verbose=TRUE)
feature<-rfe(is_attributed ~ . ,
data=train,
sizes(2,4,8),
rfeControl=rfectrl)
feature<-rfe(is_attributed ~ . ,
data=train,
sizes=c(2,4,8),
rfeControl=rfectrl)
feature<-rfe(is_attributed ~ . ,
data=train,
sizes=c(2,4,8),
rfeControl=rfectrl)
rfectrl <- rfeControl(functions = 'lmFuncs',verbose=TRUE)
feature<-rfe(is_attributed ~ . ,
data=train,
sizes=c(2,4,8),
rfeControl=rfectrl)
rfectrl <- rfeControl(functions = 'rfFuncs',verbose=TRUE)
feature<-rfe(is_attributed ~ . ,
data=train,
sizes=2:8,
rfeControl=rfectrl)
train
feature<-rfe(is_attributed ~ . ,
data=as.data.frame(train),
sizes=2:8,
rfeControl=rfectrl)
as.data.frame(train)
View(train)
rfectrl <- rfeControl(functions = 'rfFuncs')
feature<-rfe(is_attributed ~ . ,
data=as.data.frame(train),
sizes=2:8,
rfeControl=rfectrl)
feature<-rfe(x=train[-is_attributed], y=train[is_attributed],
sizes=2:8,
rfeControl=rfectrl)
feature<-rfe(x=train[-5], y=train[5],
sizes=2:8,
rfeControl=rfectrl)
feature<-rfe(x=train[,-5], y=train[,5],
sizes=2:8,
rfeControl=rfectrl)
train<-train%>%select(-app,-ip)%>%as.data.frame()
train<-dadosaj[x,]
test<-dadosaj[-x,]
train<-train%>%select(-app,-ip)%>%as.data.frame()
rfectrl <- rfeControl(functions = 'rfFuncs')
feature<-rfe(x=train[,-5], y=train[,5],
sizes=2:8,
rfeControl=rfectrl)
train<-train%>%select(-app,-ip)%>%as.matrix()
train<-dadosaj[x,]
train<-train%>%select(-app,-ip)%>%as.matrix()
rfectrl <- rfeControl(functions = 'rfFuncs')
feature<-rfe(x=train[,-5], y=train[,5],
sizes=2:8,
rfeControl=rfectrl)
browse()
debug()
debug(rfe)
feature<-rfe(x=train[,-5], y=train[,5],
sizes=2:8,
rfeControl=rfectrl)
function (x, ...)
UseMethod("rfe")
function (x, ...)
UseMethod("rfe")
function (x, ...)
UseMethod("rfe")
rfectrl <- rfeControl(functions = rfFuncs)
feature<-rfe(x=train[,-5], y=train[,5],
sizes=2:8,
rfeControl=rfectrl)
train<-dadosaj[x,]
test<-dadosaj[-x,]
train<-train%>%select(-app,-ip)
rfectrl <- rfeControl(functions = rfFuncs)
feature<-rfe(x=train[,-5], y=train[,5],
sizes=2:8,
rfeControl=rfectrl)
train<-dadosaj[x,]
train<-train%>%select(-app,-ip,-channel)
rfectrl <- rfeControl(functions = rfFuncs)
feature<-rfe(x=train[,-5], y=train[,5],
sizes=2:8,
rfeControl=rfectrl)
View(train)
rfectrl <- rfeControl(functions = rfFuncs)
feature<-rfe(x=train[,-4], y=train[,4],
sizes=2:8,
rfeControl=rfectrl)
rfectrl <- sbfControl(functions = rfSBF)
feature<-sbf(x=train[,-4], y=train[,4],
sizes=2:8,
sbfControl=rfectrl)
rfectrl <- sbfControl(functions = nbSBF)
feature<-sbf(x=train[,-4], y=train[,4],
sizes=2:8,
sbfControl=rfectrl)
rfectrl <- sbfControl(functions = lmSBF)
feature<-sbf(x=train[,-4], y=train[,4],
sizes=2:8,
sbfControl=rfectrl)
rfectrl <- rfeControl(functions = lmFuncs)
feature<-rfe(x=train[,-4], y=train[,4],
sizes=2:8,
rfeControl=rfectrl)
rfectrl <- rfeControl(functions = nbFuncs)
feature<-rfe(x=train[,-4], y=train[,4],
sizes=2:8,
rfeControl=rfectrl)
rfectrl <- rfeControl(functions = nbFuncs)
feature<-rfe(x=train[,-4], y=train[,4],
sizes=2:8,
rfeControl=rfectrl)
rfectrl <- rfeControl(functions = nbFuncs,verbose=TRUE)
library(readr)
library(tidyverse)
library(ggplot2)
library(caret)
library(skimr)
library(randomForest)
library(DMwR)
rfectrl <- rfeControl(functions = nbFuncs,verbose=TRUE)
feature<-rfe(x=train[,-4], y=train[,4],
sizes=2:6,
rfeControl=rfectrl)
rfectrl <- rfeControl(functions = nbFuncs,importance=T,verbose=TRUE)
options(error=utils::recover)
feature<-rfe(x=train[,-4], y=train[,4],
sizes=2:6,
rfeControl=rfectrl)
rfectrl <- rfeControl(functions = rfFuncs,verbose=TRUE)
feature<-rfe(x=train[,-4], y=train[,4],
sizes=2:6,
rfeControl=rfectrl)
rfectrl <- rfeControl(functions = lmFuncs,verbose=TRUE)
feature<-rfe(x=train[,-4], y=train[,4],
sizes=2:6,
rfeControl=rfectrl)
feature<-rfe(x=train[,-4], y=train[,4],
sizes=2:6,
rfeControl=rfectrl)
rfectrl <- rfeControl(functions = nbFuncs,method="cv", number=10,verbose=TRUE)
feature<-rfe(x=train[,-4], y=train[,4],
sizes=2:6,
rfeControl=rfectrl)
rfectrl <- rfeControl(functions = nbFuncs,method="cv", number=10,verbose=TRUE,allowParallel=FALSE)
feature<-rfe(x=train[,-4], y=train[,4],
sizes=2:6,
rfeControl=rfectrl)
feature<-rfe(x=train[,-4], y=train[,4],
sizes=2:6,metric='Accuracy',
rfeControl=rfectrl)
rfectrl <- rfeControl(functions = nbFuncs,method="boot", verbose=TRUE,allowParallel=FALSE)
feature<-rfe(x=train[,-4], y=train[,4],
sizes=2:6,metric='Accuracy',
rfeControl=rfectrl)
View(train)
feature<-rfe(is_attributed ~ . ,data=train,
sizes=2:6,metric='Accuracy',
rfeControl=rfectrl)
rfectrl <- rfeControl(functions = nbFuncs,method="repeatedcv", verbose=TRUE,allowParallel=FALSE)
feature<-rfe(is_attributed ~ . ,data=train,
sizes=2:6,metric='Accuracy',
rfeControl=rfectrl)
rfectrl <- rfeControl(functions = nbFuncs,method="LOOCV", verbose=TRUE,allowParallel=FALSE)
feature<-rfe(is_attributed ~ . ,data=train,
sizes=2:6,metric='Accuracy',
rfeControl=rfectrl)
rfectrl <- rfeControl(functions = nbFuncs,method="boot", verbose=TRUE,allowParallel=FALSE)
feature<-rfe(is_attributed ~ . ,data=train,
sizes=2:6,metric='Accuracy',
rfeControl=rfectrl)
